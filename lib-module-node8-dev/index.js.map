{"version":3,"sources":["../src/index.js"],"names":["Logger","logger","process","SIGTERMTimeout","Promise","resolve","exitCode","signalCode","warn","pid","killTimeout","setTimeout","kill","removeAllListeners","once","code","signal","info","clearTimeout"],"mappings":"AAAA,OAAOA,MAAP;;;AAEA,MAAMC,SAAS,IAAID,MAAJ,CAAW,eAAX,CAAf;;AAEA,gBAAe,eAACE,OAAD,EAAUC,iBAAyB,IAAnC;AAAA,4BAAwB,UAAxB;;AAAA;AAAA,SACb,IAAIC,OAAJ,CAAYC,WAAW;AACrB,QAAIH,QAAQI,QAAR,KAAqB,IAArB,IAA6BJ,QAAQK,UAAR,KAAuB,IAAxD,EAA8D;AAC5DN,aAAOO,IAAP,CAAY,wBAAZ,EAAsC,EAAEC,KAAKP,QAAQO,GAAf,EAAtC;AACA,aAAOJ,SAAP;AACD;AACD,UAAMK,cAAcC,WAAW,MAAM;AACnC,UAAIT,QAAQI,QAAR,KAAqB,IAArB,IAA6BJ,QAAQK,UAAR,KAAuB,IAAxD,EAA8D;AAC5DN,eAAOO,IAAP,CAAY,sCAAZ,EAAoD,EAAEC,KAAKP,QAAQO,GAAf,EAApD;AACA,eAAOJ,SAAP;AACD;;AAEDJ,aAAOO,IAAP,CAAY,kCAAZ,EAAgD,EAAEC,KAAKP,QAAQO,GAAf,EAAhD;AACAP,cAAQU,IAAR,CAAa,SAAb;AACD,KARmB,EAQjBT,cARiB,CAApB;;AAUAD,YAAQW,kBAAR;AACAX,YAAQY,IAAR,CAAa,MAAb,EAAqB,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACrCf,aAAOgB,IAAP,CAAY,SAAZ,EAAuB,EAAER,KAAKP,QAAQO,GAAf,EAAoBM,IAApB,EAA0BC,MAA1B,EAAvB;AACA,UAAIN,WAAJ,EAAiBQ,aAAaR,WAAb;AACjBL;AACD,KAJD;AAKAH,YAAQU,IAAR;AACD,GAtBD,CADa;AAAA,CAAf","file":"index.js","sourcesContent":["import Logger from 'nightingale-logger/src';\n\nconst logger = new Logger('graceful-kill');\n\nexport default (process, SIGTERMTimeout: number = 4000) =>\n  new Promise(resolve => {\n    if (process.exitCode !== null || process.signalCode !== null) {\n      logger.warn('process already exited', { pid: process.pid });\n      return resolve();\n    }\n    const killTimeout = setTimeout(() => {\n      if (process.exitCode !== null || process.signalCode !== null) {\n        logger.warn('kill timeout: process already exited', { pid: process.pid });\n        return resolve();\n      }\n\n      logger.warn('kill timeout: sending SIGKILL...', { pid: process.pid });\n      process.kill('SIGKILL');\n    }, SIGTERMTimeout);\n\n    process.removeAllListeners();\n    process.once('exit', (code, signal) => {\n      logger.info('stopped', { pid: process.pid, code, signal });\n      if (killTimeout) clearTimeout(killTimeout);\n      resolve();\n    });\n    process.kill();\n  });\n"]}